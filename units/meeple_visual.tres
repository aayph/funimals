[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://b6ud30ftga7fs"]

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_u2ohu"]
default_input_values = [0, 0.0, 1, -1.0, 2, 1.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_svjbx"]
parameter_name = "Happiness"
qualifier = 2
default_value_enabled = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_c6f03"]
default_input_values = [0, 0.0, 1, 0.8, 2, -0.1, 3, Vector3(0, 0, 0), 4, Vector3(-0.075, 0.1, 0.1), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_ufk1c"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.3, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_h5nxn"]
constant = Color(0.44, 0.44, 0.44, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_s1l5m"]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_bj0y1"]
constant = 1.0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ij3sv"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_stoen"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_1ktie"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_l6teg"]
constant = Color(1, 1, 0, 1)

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_hqds8"]
constant = Color(0.158667, 0, 0.28, 1)

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_8fgo7"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

instance uniform float Happiness = 0;



void fragment() {
// ColorConstant:8
	vec4 n_out8p0 = vec4(0.158667, 0.000000, 0.280000, 1.000000);


// FloatParameter:11
	float n_out11p0 = Happiness;


// ColorConstant:14
	vec4 n_out14p0 = vec4(0.440000, 0.440000, 0.440000, 1.000000);


// ColorConstant:7
	vec4 n_out7p0 = vec4(1.000000, 1.000000, 0.000000, 1.000000);


	vec3 n_out13p0;
// If:13
	float n_in13p1 = 0.00000;
	float n_in13p2 = 0.30000;
	vec3 n_in13p5 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out11p0 - n_in13p1) < n_in13p2)
	{
		n_out13p0 = vec3(n_out14p0.xyz);
	}
	else if(n_out11p0 < n_in13p1)
	{
		n_out13p0 = n_in13p5;
	}
	else
	{
		n_out13p0 = vec3(n_out7p0.xyz);
	}


// Input:3
	vec2 n_out3p0 = UV;
	float n_out3p2 = n_out3p0.g;


// FloatOp:4
	float n_out4p0 = n_out3p2 + n_out11p0;


// Clamp:9
	float n_in9p1 = 0.00000;
	float n_in9p2 = 1.00000;
	float n_out9p0 = clamp(n_out4p0, n_in9p1, n_in9p2);


// Mix:6
	vec3 n_out6p0 = mix(vec3(n_out8p0.xyz), n_out13p0, vec3(n_out9p0));


// FloatConstant:17
	float n_out17p0 = 1.000000;


// Clamp:10
	float n_in10p1 = -1.00000;
	float n_in10p2 = 1.00000;
	float n_out10p0 = clamp(n_out4p0, n_in10p1, n_in10p2);


// VectorOp:16
	vec3 n_out16p0 = vec3(n_out10p0) * n_out6p0;


// Output:0
	ALBEDO = n_out6p0;
	ROUGHNESS = n_out17p0;
	EMISSION = n_out16p0;


}
"
graph_offset = Vector2(56.005, -33.1264)
nodes/fragment/0/position = Vector2(680, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_ij3sv")
nodes/fragment/3/position = Vector2(-860, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_stoen")
nodes/fragment/4/position = Vector2(-340, 160)
nodes/fragment/6/node = SubResource("VisualShaderNodeMix_1ktie")
nodes/fragment/6/position = Vector2(120, 120)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorConstant_l6teg")
nodes/fragment/7/position = Vector2(-880, -40)
nodes/fragment/8/node = SubResource("VisualShaderNodeColorConstant_hqds8")
nodes/fragment/8/position = Vector2(-880, 40)
nodes/fragment/9/node = SubResource("VisualShaderNodeClamp_8fgo7")
nodes/fragment/9/position = Vector2(-160, 220)
nodes/fragment/10/node = SubResource("VisualShaderNodeClamp_u2ohu")
nodes/fragment/10/position = Vector2(-160, 380)
nodes/fragment/11/node = SubResource("VisualShaderNodeFloatParameter_svjbx")
nodes/fragment/11/position = Vector2(-820, 300)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_c6f03")
nodes/fragment/12/position = Vector2(120, 560)
nodes/fragment/13/node = SubResource("VisualShaderNodeIf_ufk1c")
nodes/fragment/13/position = Vector2(-520, -200)
nodes/fragment/14/node = SubResource("VisualShaderNodeColorConstant_h5nxn")
nodes/fragment/14/position = Vector2(-880, -120)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_s1l5m")
nodes/fragment/16/position = Vector2(440, 320)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatConstant_bj0y1")
nodes/fragment/17/position = Vector2(420, 220)
nodes/fragment/connections = PackedInt32Array(3, 2, 4, 0, 8, 0, 6, 0, 4, 0, 9, 0, 9, 0, 6, 2, 6, 0, 0, 0, 4, 0, 10, 0, 10, 0, 12, 4, 7, 0, 13, 4, 14, 0, 13, 3, 13, 0, 6, 1, 16, 0, 0, 5, 11, 0, 13, 0, 11, 0, 4, 1, 11, 0, 12, 0, 17, 0, 0, 3, 10, 0, 16, 0, 6, 0, 16, 1)
